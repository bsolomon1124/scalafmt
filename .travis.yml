language: scala

stages:
  - name: release
    if: (branch = master AND type = push) OR (tag IS present)

jobs:
  include:
    - name: "sbt release"
      stage: release
      jdk: openjdk8
      script: sbt ci-release docs/docusaurusPublishGhpages
    - name: "dockerize"
      stage: release
      services:
        - docker
      script:
      # Extract the d.d.d version from .scalafmt.conf
      - SCALAFMT_VERSION="$(grep '^version=' .scalafmt.conf | cut -d '=' -f 2 | tr -s '[:blank:]')"
      # Log in to Docker Hub via user/pass environment variables
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - cd docker/ || exit 1
      # Build + push both 'latest' and version tags
      - >
        docker build
        --no-cache
        --build-arg SCALAFMT_VERSION="$SCALAFMT_VERSION"
        --progress=plain
        -t "scalameta/$DOCKER_USERNAME:$version"
        -t "scalameta/$DOCKER_USERNAME:latest"
        .
      - docker push "scalameta/$DOCKER_USERNAME:$version"
      - docker push "scalameta/$DOCKER_USERNAME:latest"

cache:
  directories:
    - $HOME/.sbt
    - $HOME/.ivy2/cache
    - $HOME/.coursier
    - target/repos

before_cache:
  - du -h -d 1 $HOME/.ivy2/cache
  - du -h -d 2 $HOME/.sbt/
  - find $HOME/.sbt -name "*.lock" -type f -delete
  - find $HOME/.ivy2/cache -name "ivydata-*.properties" -type f -delete
  - rm -rf $HOME/.ivy2/local

before_install:
  - git fetch --tags --unshallow
